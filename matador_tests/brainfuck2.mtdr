// todo: this does not output the expected "Hello World!"

fn interpret(s) {
    if !(s is string) {
        return "Please provide a valid string"
    }

    // create a memory array
    let mem = [0]
    let len = 1000
    let x = 0
    while x < len {
        mem = mem + 0
        x = x + 1
    }
    let ptr = 0

    // iterate the characters of the code
    let i = 0
    let c = 0
    while i < sizeof s {
        // > moves the pointer to the right
        if s[i] == ">" {
            if ptr == len - 1 { // expand the memory
                ptr = 0
            } else {
                ptr = ptr + 1
            }
        }

        // < moves the pointer to the left
        else if s[i] == "<" {
            if ptr == 0 { // loop back to the end of mem
                ptr = len - 1
            } else {
                ptr = ptr - 1
            }
        }

        // + increments the value of the memory
        else if s[i] == "+" {
            mem[ptr] = mem[ptr] + 1
        }

        // - decrements the value of the memory
        else if s[i] == "-" {
            mem[ptr] = mem[ptr] - 1
        }

        // . outputs the value of the memory
        else if s[i] == "." {
            print(to_ascii_char(mem[ptr]))
        }

        // , inputs a value and stores it in the memory
        else if s[i] == "," {
            mem[ptr] = readln()
        }

        // [ jumps to the matching ] if the value of the memory is 0
        else if s[i] == "[" {
            if mem[ptr] == 0 {
                i = i + 1
                while c > 0 || s[i] != "]" {
                    if s[i] == "[" {
                        c = c + 1
                    } else if s[i] == "]" {
                        c = c - 1
                    }
                    i = i + 1
                }
            }
        }

        // ] jumps back to the matching [ if the cell under the pointer is nonzero
        else if s[i] == "]" {
            if mem[ptr] != 0 {
                i = i - 1
                while c > 0 || s[i] != "[" {
                    if s[i] == "]" {
                        c = c + 1
                    } else if s[i] == "[" {
                        c = c - 1
                    }
                    i = i - 1
                }
            }
        }

        i = i + 1
    }
    println()

    mem // return mem
}

println(interpret("--[+++++++>-->+>+>+<<<->---.>--..>+.<<<.+>->>.+++[.<]"))